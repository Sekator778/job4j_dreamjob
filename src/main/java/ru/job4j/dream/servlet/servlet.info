сервлеты
кандидат = это тот кто ищет работу(кандидат) куда то
индекс = стартовая
пост = должность или вакансия

работают с расширением  extends HttpServlet и переопределением базовых методов
  doPost =     /* Метод getParameter позволяет получить значения в запросе */
               /*После того, как сервлет выполнил свою работу мы просим сервер отправить другой запрос,
                но уже к странице posts.jsp.
                */
//////////////////////////////////////////upload//////////////////
 рассмотрим класс UploadServlet. Это servlet будет обрабатывать загрузку файла на сервер.
Порядок загрузки файла на сервер.

1. Вначале мы создаем фабрику по которой можем понять, какие данные есть в запросы. Данные могу быть: поля или файлы.

2. Получаем список всех данных в запросе.

List<FileItem> items = upload.parseRequest(req);
3. Если элемент не поле, то это файл и из него можно прочитать весь входной поток и записать его в файл или напрямую в базу данных.

                    File file = new File(folder + File.separator + item.getName());
                    try (FileOutputStream out = new FileOutputStream(file)) {
                        out.write(item.getInputStream().readAllBytes());
                    }
4. После этого мы переходим в метод doGet, где отдаем список всех файлов. В этом списке содержатся только имена.

        for (File name : new File("images").listFiles()) {
            images.add(name.getName());
        }
        req.setAttribute("images", images);
---------- рассмотрим servlet - DownloadServlet.----------------------------------------
1. Мы выставляем заголовок ответа в протоколе. Таким образом мы сообщаем браузеру, что будем отправлять файл.

2. Открываем поток и записываем его в выходной поток servlet.

resp.getOutputStream().write(in.readAllBytes());

